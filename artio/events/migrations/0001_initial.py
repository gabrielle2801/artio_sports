# Generated by Django 4.2.19 on 2025-06-13 15:41

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='JoutesEventPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True)),
                ('content', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('image', 2)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'form_classname': 'full title', 'help_text': 'Titre de section'}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['h2', 'h3', 'bold', 'italic', 'link'], 'help_text': 'Texte enrichi'}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Image illustrative'})})),
                ('video_url', models.URLField(blank=True, help_text='URL de la vidéo (YouTube embed, Vimeo, etc.)')),
                ('faq', wagtail.fields.StreamField([('question', 2)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'Texte de la question', 'required': True}), 1: ('wagtail.blocks.RichTextBlock', (), {'help_text': 'Texte de la réponse', 'required': True}), 2: ('wagtail.blocks.StructBlock', [[('question_text', 0), ('answer_text', 1)]], {})})),
            ],
            options={
                'verbose_name': 'Page Événement - Joutes Sétoises',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='JoutesEventPageProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.PositiveIntegerField(blank=True, help_text='ID du produit Oscar', null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_product_links', to='events.jouteseventpage')),
            ],
            options={
                'verbose_name': 'Produit lié à un événement',
                'verbose_name_plural': 'Produits liés aux événements',
            },
        ),
    ]
